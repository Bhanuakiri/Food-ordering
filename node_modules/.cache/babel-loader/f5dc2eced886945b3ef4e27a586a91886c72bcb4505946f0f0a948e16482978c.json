{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhanu\\\\OneDrive\\\\Desktop\\\\food ordering\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n  _s = $RefreshSig$();\nimport classes from './checkout.module.css';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isempty = value => value.trim() === '';\nconst isNotpin = value => value.trim().length !== 5;\nconst Checkout = props => {\n  _s();\n  const [forminputsValidity, setforminputsValidity] = useState({\n    name: true,\n    city: true,\n    street: true,\n    postal: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n  const confirmHandler = event => {\n    event.preventdefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    const enteredNameIsValid = !isempty(enteredName);\n    const enteredStreetIsValid = !isempty(enteredStreet);\n    const enteredCityIsValid = !isempty(enteredCity);\n    const enteredPostalCodeIsValid = !isNotpin(enteredPostal);\n    setforminputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postal: enteredPostalCodeIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredCityIsValid && enteredPostalCodeIsValid;\n    if (formIsValid) {\n      return;\n    }\n  };\n  const nameControlClasses = `${classes.control} ${forminputsValidity.name ? '' : classes.invalid}`;\n  const streetControlClasses = `${classes.control} ${forminputsValidity.street ? '' : classes.invalid}`;\n  const postalCodeControlClasses = `${classes.control} ${forminputsValidity.postal ? '' : classes.invalid}`;\n  const cityControlClasses = `${classes.control} ${forminputsValidity.city ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), !forminputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: streetControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), !forminputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid street name!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: postalCodeControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), !forminputsValidity.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid postal code (5 characters long)!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), !forminputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid city!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(Checkout, \"D0eEITesTMdS2aUTxO8u0EwmWL4=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["classes","useRef","useState","jsxDEV","_jsxDEV","isempty","value","trim","isNotpin","length","Checkout","props","_s","forminputsValidity","setforminputsValidity","name","city","street","postal","nameInputRef","streetInputRef","postalInputRef","cityInputRef","confirmHandler","event","preventdefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostalCodeIsValid","formIsValid","nameControlClasses","control","invalid","streetControlClasses","postalCodeControlClasses","cityControlClasses","className","form","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","ref","actions","onClick","onCancel","submit","_c","$RefreshReg$"],"sources":["C:/Users/bhanu/OneDrive/Desktop/food ordering/src/components/Cart/Checkout.js"],"sourcesContent":["import classes from './checkout.module.css'\r\nimport { useRef,useState } from 'react';\r\n\r\nconst isempty = value => value.trim() ==='';\r\nconst isNotpin = value => value.trim().length !==5;\r\n\r\nconst Checkout = (props) =>{\r\n    const [forminputsValidity,setforminputsValidity] = useState({\r\n        name :true,\r\n        city : true,\r\n        street : true,\r\n        postal: true,\r\n    });\r\n    \r\n    const nameInputRef = useRef();\r\n    const streetInputRef = useRef();\r\n    const postalInputRef = useRef();\r\n    const cityInputRef = useRef();\r\n   const confirmHandler =(event)=>{\r\n    event.preventdefault();\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredPostal = postalInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n   \r\n    const enteredNameIsValid = !isempty(enteredName);\r\n    const enteredStreetIsValid = !isempty(enteredStreet);\r\n    const enteredCityIsValid = !isempty(enteredCity);\r\n    const enteredPostalCodeIsValid = !isNotpin(enteredPostal);\r\n\r\n    setforminputsValidity({\r\n        name: enteredNameIsValid,\r\n        street: enteredStreetIsValid,\r\n        city: enteredCityIsValid,\r\n        postal: enteredPostalCodeIsValid,\r\n      });\r\n\r\n    const formIsValid =\r\n    enteredNameIsValid &&\r\n    enteredStreetIsValid &&\r\n    enteredCityIsValid &&\r\n    enteredPostalCodeIsValid;\r\n\r\n    if (formIsValid){\r\n        return;\r\n    }\r\n\r\n   };\r\n   const nameControlClasses = `${classes.control} ${\r\n    forminputsValidity.name ? '' : classes.invalid\r\n  }`;\r\n  const streetControlClasses = `${classes.control} ${\r\n    forminputsValidity.street ? '' : classes.invalid\r\n  }`;\r\n  const postalCodeControlClasses = `${classes.control} ${\r\n    forminputsValidity.postal ? '' : classes.invalid\r\n  }`;\r\n  const cityControlClasses = `${classes.control} ${\r\n    forminputsValidity.city ? '' : classes.invalid\r\n  }`;\r\n\r\n    return(\r\n        <form className={classes.form} onSubmit={confirmHandler}>\r\n        <div className={nameControlClasses}>\r\n          <label htmlFor='name'>Your Name</label>\r\n          <input type='text' id='name' ref={nameInputRef}/>\r\n          {!forminputsValidity.name && <p>Please enter a valid name!</p>}\r\n        </div>\r\n        <div className={streetControlClasses}>\r\n          <label htmlFor='street'>Street</label>\r\n          <input type='text' id='street' ref={streetInputRef} />\r\n          {!forminputsValidity.street && <p>Please enter a valid street name!</p>}\r\n        </div>\r\n        <div className={postalCodeControlClasses}>\r\n          <label htmlFor='postal'>Postal Code</label>\r\n          <input type='text' id='postal'ref={postalInputRef} />\r\n          {!forminputsValidity.postal && (\r\n          <p>Please enter a valid postal code (5 characters long)!</p>\r\n        )}\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor='city'>City</label>\r\n          <input type='text' id='city' ref={cityInputRef}/>\r\n          {!forminputsValidity.city && <p>Please enter a valid city!</p>}\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button type='button' onClick={props.onCancel}>\r\n            Cancel\r\n          </button>\r\n          <button className={classes.submit}>Confirm</button>\r\n        </div>\r\n      </form>\r\n    );\r\n};\r\nexport default Checkout;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}